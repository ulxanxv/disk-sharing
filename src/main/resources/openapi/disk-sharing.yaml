openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
paths:
  /sharing/disks/take:
    put:
      tags:
        - sharing-controller
      operationId: takeDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TakeDiskRequestMo'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /sharing/disks/return:
    put:
      tags:
        - sharing-controller
      operationId: returnDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnDiskRequestMo'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /auth/login:
    post:
      tags:
        - login-controller
      summary: Авторизация
      operationId: doLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestMo'
        required: true
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseMo'
        '400':
          description: Неверный пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Неверный пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /sharing/disks:
    get:
      tags:
        - sharing-controller
      operationId: getDisks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetDisksResponseMo'
  /sharing/disks/taken:
    get:
      tags:
        - sharing-controller
      operationId: getTakenDisks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetTakenDisksResponseMo'
  /sharing/disks/free:
    get:
      tags:
        - sharing-controller
      operationId: getFreeDisks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetFreeDisksResponseMo'
  /sharing/disks/debtors:
    get:
      tags:
        - sharing-controller
      operationId: getDebtors
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetDebtorsResponseMo'
components:
  schemas:
    TakeDiskRequestMo:
      type: object
      properties:
        diskId:
          type: integer
          format: int64
    ReturnDiskRequestMo:
      type: object
      properties:
        diskId:
          type: integer
          format: int64
    LoginRequestMo:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    LoginResponseMo:
      type: object
      properties:
        token:
          type: string
    ApiError:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        statusCode:
          type: integer
          format: int32
    DiskMo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        releaseDate:
          type: string
          format: date-time
    GetDisksResponseMo:
      type: object
      properties:
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskMo'
    GetTakenDisksResponseMo:
      type: object
      properties:
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskMo'
    GetFreeDisksResponseMo:
      type: object
      properties:
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskMo'
    GetDebtorsResponseMo:
      type: object
      properties:
        debtors:
          type: array
          items:
            $ref: '#/components/schemas/TakenItemMo'
    TakenItemMo:
      type: object
      properties:
        debtor:
          $ref: '#/components/schemas/UserMo'
        disk:
          $ref: '#/components/schemas/DiskMo'
    UserMo:
      type: object
      properties:
        login:
          type: string